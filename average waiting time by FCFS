#include <stdio.h>

void calculateWaitingTime(int processes[], int n, int burst_time[], int waiting_time[]) {
    waiting_time[0] = 0; // First process has no waiting time
    
    for (int i = 1; i < n; i++) {
        waiting_time[i] = burst_time[i - 1] + waiting_time[i - 1];
    }
}

void findAverageTime(int processes[], int n, int burst_time[]) {
    int waiting_time[n];
    int total_waiting_time = 0;
    
    calculateWaitingTime(processes, n, burst_time, waiting_time);
    
    printf("Process \t Burst Time \t Waiting Time\n");
    
    for (int i = 0; i < n; i++) {
        total_waiting_time += waiting_time[i];
        printf("%d \t\t %d \t\t %d\n", processes[i], burst_time[i], waiting_time[i]);
    }
    
    printf("\nAverage Waiting Time = %.2f\n", (float)total_waiting_time / n);
}

int main() {
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);
    
    int processes[n], burst_time[n];
    
    printf("Enter burst times for each process:\n");
    for (int i = 0; i < n; i++) {
        processes[i] = i + 1;
        printf("Process %d: ", i + 1);
        scanf("%d", &burst_time[i]);
    }
    
    findAverageTime(processes, n, burst_time);
    
    return 0;
}
